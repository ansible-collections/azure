trigger: none

pr:
- dev

pool:
  vmImage: 'ubuntu-latest'

strategy:
  matrix:
    Python27:
      T: 'azure/2.7/1'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '2.7'

- task: AzureCLI@2
  inputs:
    azureSubscription: '$(SUBSCRIPTION_FULL_NAME)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
        az group create -l eastus -n $(RESOURCE_GROUP)
        az group create -l eastus -n $(RESOURCE_GROUP_SECONDARY)


- script: tests/utils/ado/ado.sh $T
  env:
    SHIPPABLE_BUILD_DIR: $(Build.Repository.LocalPath)
    REPO_FULL_NAME: $(Build.Repository.Name)
    SHIPPABLE_BUILD_ID: $(Build.BuildId)
    AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
    AZURE_SECRET: $(AZURE_SECRET)
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    AZURE_TENANT: $(AZURE_TENANT)
    RESOURCE_GROUP: $(RESOURCE_GROUP)
    RESOURCE_GROUP_SECONDARY: $(RESOURCE_GROUP_SECONDARY)
  displayName: 'Test'

- task: AzureCLI@2
  condition: always()
  inputs:
    azureSubscription: '$(SUBSCRIPTION_FULL_NAME)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
        az group delete -n $(RESOURCE_GROUP) --yes
        az group delete -n $(RESOURCE_GROUP_SECONDARY) --yes