trigger: none

pr:
- dev

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: CreateResourceGroups
    steps:
      - bash: |
          echo "##vso[task.setvariable variable=resource_group;isOutput=true]ansibletest-$(uuidgen)"
          echo "##vso[task.setvariable variable=resource_group_secondary;isOutput=true]ansibletest2-$(uuidgen)"
        name: setvar
      - bash: |
          echo "Generate test resource group $(setvar.resource_group), $(setvar.resource_group_secondary)"
      - task: AzureCLI@2
        inputs:
          azureSubscription: '$(SUBSCRIPTION_FULL_NAME)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
              az group create -l eastus -n $(setvar.resource_group)
              az group create -l eastus -n $(setvar.resource_group_secondary)

  - job: RunTests
    dependsOn: CreateResourceGroups 
    variables:
      TEST_RESOURCE_GROUP: $[ dependencies.CreateResourceGroups.outputs['setvar.resource_group'] ]
      TEST_RESOURCE_GROUP_SECONDARY: $[ dependencies.CreateResourceGroups.outputs['setvar.resource_group_secondary'] ]
    strategy:
      matrix:
        Python27_1:
          python.version: '2.7'
          test.group: '1'
        Python36_2:
          python.version: '3.6'
          test.group: '2'

    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(python.version)'
      inputs:
        versionSpec: '$(python.version)'



    - bash: |
        echo "Generate test resource group $TEST_RESOURCE_GROUP, $TEST_RESOURCE_GROUP_SECONDARY"

    - script: tests/utils/ado/ado.sh $(test.group)
      env:
        SHIPPABLE_BUILD_DIR: $(Build.Repository.LocalPath)
        REPO_FULL_NAME: $(Build.Repository.Name)
        SHIPPABLE_BUILD_ID: $(Build.BuildId)
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_SECRET: $(AZURE_SECRET)
        AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
        AZURE_TENANT: $(AZURE_TENANT)
        RESOURCE_GROUP: $(TEST_RESOURCE_GROUP)
        RESOURCE_GROUP_SECONDARY: $(TEST_RESOURCE_GROUP_SECONDARY)
      displayName: 'Test'

  - job: CleanupResourceGroups
    dependsOn: 
      - CreateResourceGroups
      - RunTests
    condition: always()
    variables:
      TEST_RESOURCE_GROUP: $[ dependencies.CreateResourceGroups.outputs['setvar.resource_group'] ]
      TEST_RESOURCE_GROUP_SECONDARY: $[ dependencies.CreateResourceGroups.outputs['setvar.resource_group_secondary'] ]
    steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: '$(SUBSCRIPTION_FULL_NAME)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
              az group delete -n $TEST_RESOURCE_GROUP --yes --no-wait
              az group delete -n $TEST_RESOURCE_GROUP_SECONDARY --yes --no-wait