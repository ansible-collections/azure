- name: set facts
  set_fact:
     subscription_id: "{{ azure_subscription_id }}"
     subscription_sec_id: "{{ azure_subscription_sec_id }}"
     managed_by_tenant_id: "{{ azure_managed_by_tenant_id }}"
     principal_id: "{{ azure_principal_id }}"
     role_definition_id: "{{ azure_role_definition_id }}"
     reg_def_name: test_name
  run_once: yes

- name: Create a RegistrationDefinition -- check mode
  azure_rm_registrationdefinition:
    properties:
      description: first_test
      authorizations:
        - principal_id: "{{ principal_id }}"
          role_definition_id: "{{ role_definition_id }}"
      managed_by_tenant_id: "{{ managed_by_tenant_id }}"
      registration_definition_name: "{{ reg_def_name }}"
  check_mode: yes
  register: output

- name: Assert creating registration definition check mode
  assert:
    that:
      - output.changed

- name: Create a RegistrationDefinition with scope
  azure_rm_registrationdefinition:
    scope:  "{{ subscription_sec_id }}"
    properties:
      description: test definition with scope
      authorizations:
        - principal_id: "{{ principal_id }}"
          role_definition_id: "{{ role_definition_id }}"
      managed_by_tenant_id: "{{ managed_by_tenant_id }}"
      registration_definition_name: "{{ reg_def_name }}"
  register: output2

- name: Assert creating registration definition
  assert:
    that:
      - output2.changed

- name: Create a RegistrationDefinition
  azure_rm_registrationdefinition:
    properties:
      description: first_test
      authorizations:
        - principal_id: "{{ principal_id }}"
          role_definition_id: "{{ role_definition_id }}"
      managed_by_tenant_id: "{{ managed_by_tenant_id }}"
      registration_definition_name: "{{ reg_def_name }}"
  register: output1

- name: Assert creating registration definition
  assert:
    that:
      - output1.changed

- name: Create a RegistrationDefinition (idempotent)
  azure_rm_registrationdefinition:
    registration_definition_id: "{{ output1.state.name }}"
    properties:
      description: first_test
      authorizations:
        - principal_id: "{{ principal_id }}"
          role_definition_id: "{{ role_definition_id }}"
      managed_by_tenant_id: "{{ managed_by_tenant_id }}"
      registration_definition_name: "{{ reg_def_name }}"
  register: output

- name: Assert creating registration definition
  assert:
    that:
      - not output.changed

- name: Update the RegistrationDefinition properties description and name
  azure_rm_registrationdefinition:
    registration_definition_id: "{{ output1.state.name }}"
    properties:
      description: second_test
      authorizations:
        - principal_id: "{{ principal_id }}"
          role_definition_id: "{{ role_definition_id }}"
      managed_by_tenant_id: "{{ managed_by_tenant_id }}"
      registration_definition_name: "{{ reg_def_name }}02"
  register: output

- name: Assert creating registration definition
  assert:
    that:
      - output.changed

- name: Get the Registration Definition info
  azure_rm_registrationdefinition_info:
    registration_definition_id:  "{{ output1.state.name }}"
  register: output

- name: Assert the registration definition info
  assert:
    that:
      - output.registration_definitions[0].name == "{{ output1.state.name }}"
      - output.registration_definitions[0].properties.authorizations[0].principal_id == "{{ principal_id }}"
      - output.registration_definitions[0].properties.authorizations[0].role_definition_id == "{{ role_definition_id }}"
      - output.registration_definitions[0].properties.provisioning_state == "Succeeded"
      - output.registration_definitions[0].properties.description == "second_test"
      - output.registration_definitions[0].properties.registration_definition_name == "test_name02"

- name: Get All Registration Definition info in the subscription
  azure_rm_registrationdefinition_info:
    scope:  "{{ subscription_id }}"
  register: output

- name: Assert all the registration definition info
  assert:
    that:
      - output.registration_definitions | length >=1

- name: Delete the registration definition
  azure_rm_registrationdefinition:
    registration_definition_id: "{{ output1.state.name }}"
    state: absent
  register: output

- name: Assert delete registration definition success
  assert:
    that:
      - output.changed

- name: Delete the registration definition
  azure_rm_registrationdefinition:
    registration_definition_id: "{{ output2.state.name }}"
    state: absent
