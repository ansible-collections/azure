- name: Prepare random number
  ansible.builtin.set_fact:
    name_rpfx: "table{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
    route_name: "route{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: true

- name: Create a route table (check mode)
  azure_rm_routetable:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    tags:
      purpose: testing
  check_mode: true
  register: output

- name: Assert check mode
  ansible.builtin.assert:
    that:
      - not output.id
      - output.changed

- name: Create a route table
  azure_rm_routetable:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    tags:
      purpose: testing
  register: output

- name: Assert the route table created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.id

- name: Create a route table (idemponent)
  azure_rm_routetable:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    tags:
      purpose: testing
  register: output

- name: Assert idempotent
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Get facts of the table
  azure_rm_routetable_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
  register: output

- name: Assert the route table facts
  ansible.builtin.assert:
    that:
      - "output.route_tables | length == 1"
      - "output.route_tables[0].routes | length == 0"

- name: Create route (check mode)
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    next_hop_type: virtual_network_gateway
    address_prefix: "10.1.0.0/16"
    route_table_name: "{{ name_rpfx }}"
  check_mode: true
  register: output

- name: Assert check mode
  ansible.builtin.assert:
    that:
      - output.changed
      - not output.id

- name: Create route
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    next_hop_type: virtual_network_gateway
    address_prefix: "10.1.0.0/16"
    route_table_name: "{{ name_rpfx }}"
  register: output

- name: Assert the route created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.id

- name: Create route (idemponent)
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    next_hop_type: virtual_network_gateway
    address_prefix: "10.1.0.0/16"
    route_table_name: "{{ name_rpfx }}"
  register: output

- name: Assert idempotent
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Update route
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    next_hop_type: virtual_network_gateway
    address_prefix: "10.1.0.0/24"
    route_table_name: "{{ name_rpfx }}"
  register: output

- name: Assert the route updated
  ansible.builtin.assert:
    that:
      - output.changed

- name: Get facts of the route
  azure_rm_route_info:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    route_table_name: "{{ name_rpfx }}"
  register: output

- name: Assert the route facts
  ansible.builtin.assert:
    that:
      - output.routes[0].address_prefix == "10.1.0.0/24"
      - output.routes[0].next_hop_type == "VirtualNetworkGateway"

- name: Get facts of the table
  azure_rm_routetable_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
  register: output

- name: Assert the route table facts
  ansible.builtin.assert:
    that:
      - "output.route_tables | length == 1"
      - "output.route_tables[0].routes | length == 1"
      - output.route_tables[0].routes[0].address_prefix == '10.1.0.0/24'

- name: Delete route (check mode)
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    route_table_name: "{{ name_rpfx }}"
    state: absent
  check_mode: true

- name: Delete route
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    state: absent
    route_table_name: "{{ name_rpfx }}"
  register: output

- name: Assert the route deleted
  ansible.builtin.assert:
    that:
      - output.changed

- name: Delete route (idemponent)
  azure_rm_route:
    name: "{{ route_name }}"
    resource_group: "{{ resource_group }}"
    state: absent
    route_table_name: "{{ name_rpfx }}"
  register: output

- name: Assert idempotent
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Delete route table (check mode)
  azure_rm_routetable:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent
  check_mode: true

- name: Delete route table
  azure_rm_routetable:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent
  register: output

- name: Assert the route table deleted
  ansible.builtin.assert:
    that:
      - output.changed

- name: Delete route table (idemponent)
  azure_rm_routetable:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent
  register: output

- name: Assert idempotent
  ansible.builtin.assert:
    that:
      - not output.changed
