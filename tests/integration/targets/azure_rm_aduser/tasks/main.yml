- name: Prepare facts
  set_fact:
    tenant_id: "{{ azure_tenant }}"
    user_id: "user{{ 999999999999999999994 | random | to_uuid }}@contoso.com"
    object_id: "{{ 999999999999999999994 | random | to_uuid }}"
    user_principal_name: "{{ 999999999999999999994 | random | to_uuid }}"
  run_once: yes

- name: Create test user
  azure_rm_aduser:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
    state: "present"
    account_enabled: "True"
    display_name: "Test_{{ user_principal_name }}_Display_Name"
    password_profile: "password"
    mail_nickname: "Test_{{ user_principal_name }}_mail_nickname"
    immutable_id: "{{ object_id }}"
    given_name: "First"
    surname: "Last"
    user_type: "Member"
    usage_location: "US"
    mail: "{{ user_principal_name }}@contoso.com"
  register: create_user_should_pass

- name: Try to update existing user - idempotent check
  azure_rm_aduser:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
    state: "present"
    display_name: "Test_{{ user_principal_name }}_Display_Name"
    mail_nickname: "Test_{{ user_principal_name }}_mail_nickname"
    given_name: "First"
    surname: "Last"
    mail: "{{ user_principal_name }}@contoso.com"
  register: attempted_update_with_no_changes_should_pass

- name: Assert Nothing Changed
  assert:
    that:
      - attempted_update_with_no_changes_should_pass["changed"] == False

- name: user_principal_name Should Pass
  azure_rm_aduser_info:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
  register: get_user_should_pass

- name: Assert user was created and account is enabled
  assert:
    that:
      - "create_user_should_pass['ad_users'][0]['account_enabled'] == True"
      - "get_user_should_pass['ad_users'][0]['account_enabled'] == True"

- name: Update test user
  azure_rm_aduser:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
    state: "present"
    account_enabled: "False"
  register: update_user_should_pass

- name: user_principal_name on updated user Should Pass
  azure_rm_aduser_info:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
  register: get_updated_user_should_pass

- name: Assert user was updated and account is disabled
  assert:
    that:
      - "update_user_should_pass['ad_users'][0]['account_enabled'] == False"
      - "get_updated_user_should_pass['ad_users'][0]['account_enabled'] == False"

- name: Delete test user
  azure_rm_aduser:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
    state: "absent"
  register: delete_user_should_pass

- name: user_principal_name Should Fail
  azure_rm_aduser_info:
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
  register: get_user_should_fail
  ignore_errors: true

- name: Assert task failed
  assert:
    that:
      - "get_user_should_fail['failed'] == True"

- name: Run with bad tenant Should Fail
  azure_rm_aduser_info:
    user_principal_name: "{{user_id}}"
    tenant: None
  register: missing_tenant
  ignore_errors: yes

- name: Assert task failed
  assert:
    that:
      - "missing_tenant['failed'] == True"

- name: Missing any identifiers Should Fail
  azure_rm_aduser_info:
    tenant: "{{ tenant_id }}"
    register: missing_any_identifiers
  ignore_errors: yes

- name: Assert task failed
  assert:
    that:
      - "missing_any_identifiers is undefined"

- name: Too many identifiers Should Fail
  azure_rm_aduser_info:
    user_principal_name: "{{ user_id }}"
    object_id: "{{ object_id }}"
    tenant: "{{ tenant_id }}"
    register: too_many_identifiers
  ignore_errors: yes

- name: Assert task failed
  assert:
    that:
      - "too_many_identifiers is undefined"

- name: Missing attribute_value Should Fail
  azure_rm_aduser_info:
    attribute_name: proxyAddresses
    tenant: "{{ tenant_id }}"
    register: missing attribute_value
  ignore_errors: yes

- name: Assert task failed
  assert:
    that:
      - "attribute_value is undefined"

- name: Missing attribute_name Should Fail
  azure_rm_aduser_info:
    attribute_value: SMTP:user@contoso.com
    tenant: "{{ tenant_id }}"
    register: missing attribute_name
  ignore_errors: yes

- name: Assert task failed
  assert:
    that:
      - "attribute_name is undefined"

- name: Using all with principal name should fail
  azure_rm_aduser_info:
    all: True
    user_principal_name: "{{ user_id }}"
    tenant: "{{ tenant_id }}"
    register: using_all_with_principal_name
  ignore_errors: yes

- name: Assert task failed
  assert:
    that:
      - "using_all_with_principal_name is undefined"
