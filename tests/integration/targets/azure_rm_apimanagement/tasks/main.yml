- name: Fix resource prefix
  ansible.builtin.set_fact:
    api_id: "myPolicy{{ resource_group | hash('md5') | truncate(23, True, '') }}"
    service_name: "myService{{ resource_group | hash('md5') | truncate(22, True, '') }}"
    display_name: test-api
    path: myapipath

- name: Create API management service
  azure_rm_apimanagementservice:
    resource_group: "{{ resource_group }}"
    name: "{{ service_name }}"
    publisher_email: user@example.com
    publisher_name: Username
    sku_name: Developer
    sku_capacity: 1

- name: Pause for 60 mimutes to create api mangement
  ansible.builtin.pause:
    minutes: 60
  changed_when: true

- name: Create a new API instance
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}"
    description: "testDescription"
    display_name: "{{ display_name }}"
    service_url: 'http://testapi.example.net/api'
    path: "{{ path }}"
    protocols:
      - https
  register: newapi

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - newapi.changed == True
      - newapi.failed == False

- name: Create a new API instance Idempotent
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}"
    description: "testDescription"
    display_name: "{{ display_name }}"
    service_url: 'http://testapi.example.net/api'
    path: "{{ path }}"
    protocols:
      - https
  register: newapi_idempotent

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - newapi_idempotent.changed == False
      - newapi_idempotent.failed == False

- name: Update protocols
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}"
    description: "testDescription"
    display_name: "{{ display_name }}"
    service_url: 'http://testapi.example.net/api'
    path: "{{ path }}"
    protocols:
      - https
      - http
  register: updateapi

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - updateapi.changed == True

- name: Create different format api
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}-secondary"
    path: "{{ path }}-secondary"
    format: openapi
    display_name: "{{ display_name }}-secondary"
    protocols:
      - https
  register: newopenapi

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - newopenapi.changed == True
      - newopenapi.failed == False

- name: Get api information
  azure_rm_apimanagement_info:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.api.id != None

- name: Delete an api
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}"
    state: absent
  register: deleteapi

- name: Assert the changes
  ansible.builtin.assert:
    that:
      - deleteapi.changed == True

- name: Delete an api Idempotent
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}"
    state: absent
  register: deleteapi_idempotent

- name: Assert the changes
  ansible.builtin.assert:
    that:
      - deleteapi_idempotent.changed == False

- name: Delete an api
  azure_rm_apimanagement:
    resource_group: "{{ resource_group }}"
    service_name: "{{ service_name }}"
    api_id: "{{ api_id }}-secondary"
    state: absent
