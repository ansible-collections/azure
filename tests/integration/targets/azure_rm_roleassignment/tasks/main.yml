- name: setup basic facts
  set_facts:
    uuid: bb21a88b-30e1-42b5-84e8-1d3f322de033

- name: List All
  azure_rm_roleassignment_info:
  register: az_role_assignments

- name: Intentional mutual exclusion info
  azure_rm_roleassignment_info:
    name: "{{ item.name | default(omit) }}"
    assignee: "{{ item.assignee | default(omit) }}"
    id: "{{ item.id | default(omit) }}"
    scope: "{{ item.scope | default(omit) }}"
  register: failures_info
  ignore_errors: True
  loop:
    - name: "{{ az_role_assignments.roleassignments[0].name }}"
      assignee: "{{ az_role_assignments.roleassignments[0].principal_id }}"
    - assignee: "{{ az_role_assignments.roleassignments[0].principal_id }}"
      id: "{{ az_role_assignments.roleassignments[0].id }}"
    - name: "{{ az_role_assignments.roleassignments[0].name }}"
      id: "{{ az_role_assignments.roleassignments[0].id }}"

- name: Intentional failures mutable
  azure_rm_roleassignment:
    name: "{{ item.name | default(omit) }}"
    assignee_object_id: "{{ item.assignee | default(omit) }}"
    id: "{{ item.id | default(omit) }}"
    scope: "{{ item.scope | default(omit) }}"
    role_definition_id: "{{ item.role_definition_id | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
  register: failures_mutable
  ignore_errors: True
  loop:
      # mutually exclusive
    - scope: "{{ az_role_assignments.roleassignments[0].scope }}"
      id: "{{ az_role_assignments.roleassignments[0].id }}"
      # mutually exclusive
    - name: "{{ az_role_assignments.roleassignments[0].name }}"
      id: "{{ az_role_assignments.roleassignments[0].id }}"
      # missing required role_definition_id
    - scope: "{{ az_role_assignments.roleassignments[0].scope }}"
      assignee_object_id: "{{ az_role_assignments.roleassignments[0].principal_id }}"
      state: "present"
      # missing required assignee_object_id
    - scope: "{{ az_role_assignments.roleassignments[0].scope }}"
      role_definition_id: "{{ az_role_assignments.roleassignments[0].role_definition_id }}"
      state: "present"
      # missing required role_definition_id
    - scope: "{{ az_role_assignments.roleassignments[0].scope }}"
      assignee_object_id: "{{ az_role_assignments.roleassignments[0].principal_id }}"
      state: "absent"
      # missing required assignee_object_id
    - scope: "{{ az_role_assignments.roleassignments[0].scope }}"
      role_definition_id: "{{ az_role_assignments.roleassignments[0].role_definition_id }}"
      state: "absent"

- name: check intended failures
  assert:
    that:
      - item.failed
  loop: "{{ failures_info.results | union(failures_mutable.results) }}"

- name: get resource group info
  azure_rm_resourcegroup_info:
    name: "{{ resource_group }}"
  register: az_resource_group

- name: create role assignment by id
  azure_rm_roleassignment:
    id: "{{ az_resource_group.resourcegroups[0].id }}/providers/Microsoft.Authorization/roleAssignments/{{ uuid }}"
    assignee_object_id: "{{ az_assignee_object_id }}"
    role_definition_id: "/subscriptions/{{ az_resource_group.resourcegroups[0].id.split('/')[2] }}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
  register: az_role_assignment_create

- name: create role assignment by scope
  azure_rm_roleassignment:
    scope: "{{ az_resource_group.resourcegroups[0].id }}"
    assignee_object_id: "{{ az_assignee_object_id }}"
    role_definition_id: "/subscriptions/{{ az_resource_group.resourcegroups[0].id.split('/')[2] }}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
  register: az_role_assignment_idempotent

- name: check idempotence
  assert:
    that:
      - az_role_assignment_idempotent.changed == False

- name: List Role Assignments by Name
  azure_rm_roleassignment_info:
    name: "{{ az_role_assignment_create.name }}"
    scope: "{{ az_role_assignment_create.scope }}"
  register: az_role_assignment_by_name

- name: List Role Assignments at scope
  azure_rm_roleassignment_info:
    scope: "{{ az_resource_group.resourcegroups[0].id }}"
  register: az_role_assignment_by_scope

- name: List Role Assignments at scope with strict matching
  azure_rm_roleassignment_info:
    scope: "{{ az_role_assignments.roleassignments[0].scope }}"
    strict_scope_match: True
  register: az_role_assignment_by_scope_strict

- name: check strict scope matching
  assert:
    that:
      - item.scope == az_role_assignments.roleassignments[0].scope 
  loop: "{{ az_role_assignment_by_scope_strict.roleassignments }}"

- name: List Role Assignments at id
  azure_rm_roleassignment_info:
    id: "{{ az_role_assignment_create.id }}"
  register: az_role_assignment_by_id

- name: List Role Assignments by assignee
  azure_rm_roleassignment_info:
    assignee: "{{ az_role_assignments.roleassignments[0].principal_id }}"
  register: az_role_assignment_by_assignee

- name: Delete Role Assignment by id
  azure_rm_roleassignment:
    id: "{{ az_role_assignment_create.id }}"
    state: absent
  register: az_role_assignment_delete

- name: create role assignment with name
  azure_rm_roleassignment:
    scope: "{{ az_resource_group.resourcegroups[0].id }}"
    assignee_object_id: "{{ az_assignee_object_id }}"
    role_definition_id: "/subscriptions/{{ az_resource_group.resourcegroups[0].id.split('/')[2] }}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
    name: "{{ uuid }}" 
  register: az_role_assignment_create

- name: Delete Role by Name
  azure_rm_roleassignment:
    scope: "{{ az_resource_group.resourcegroups[0].id }}"
    name: "{{ uuid }}"
    state: absent
  register: az_role_assignment_delete

- name: create role assignment by scope
  azure_rm_roleassignment:
    scope: "{{ az_resource_group.resourcegroups[0].id }}"
    assignee_object_id: "{{ az_assignee_object_id }}"
    role_definition_id: "/subscriptions/{{ az_resource_group.resourcegroups[0].id.split('/')[2] }}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
  register: az_role_assignment_create_by_scope

- name: delete by scope, assignee_object_id and role_definition_id
  azure_rm_roleassignment:
    scope: "{{ az_resource_group.resourcegroups[0].id }}"
    assignee_object_id: "{{ az_assignee_object_id }}"
    role_definition_id: "/subscriptions/{{ az_resource_group.resourcegroups[0].id.split('/')[2] }}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
    state: absent
  register: az_role_assignment_delete

- name: absent assignment that doesn't exist - id
  azure.azcollection.azure_rm_roleassignment:
    id: "{{ az_role_assignment_delete.id }}"
    state: absent
  register: absent_nochange_id

- name: absent assignment that doesn't exist - name
  azure.azcollection.azure_rm_roleassignment:
    name: "{{ az_role_assignment_delete.name }}"
    scope: "{{ az_role_assignment_delete.scope }}"
    state: absent
  register: absent_nochange_name

- name: absent assignment that doesn't exist - properties
  azure.azcollection.azure_rm_roleassignment:
    scope: "{{ az_role_assignment_delete.scope }}"
    assignee_object_id: "{{ az_role_assignment_delete.assignee_object_id }}"
    role_definition_id: "{{ az_role_assignment_delete.role_definition_id }}"
    state: absent
  register: absent_nochange_properties

- name: check intended failures info
  assert:
    that:
      - item.changed == false
  loop: 
    - "{{ absent_nochange_properties }}"
    - "{{ absent_nochange_id }}"
    - "{{ absent_nochange_name }}"
