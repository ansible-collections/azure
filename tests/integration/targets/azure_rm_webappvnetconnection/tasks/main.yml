- name: Prepare random number
  set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: true

- name: Create a virtual network
  azure_rm_virtualnetwork:
    name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    address_prefixes_cidr:
      - 10.1.0.0/16
      - 172.100.0.0/16
    dns_servers:
      - 127.0.0.1
      - 127.0.0.2
- name: Create a subnet
  azure_rm_subnet:
    name: subnet{{ rpfx }}
    virtual_network_name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    address_prefix_cidr: 10.1.0.0/24
    delegations:
      - name: 'mydeleg'
        serviceName: 'Microsoft.Web/serverFarms'
  register: subnet_output
- name: Create a web app
  azure_rm_webapp:
    resource_group: "{{ resource_group }}"
    name: webapp{{ rpfx }}
    plan:
      resource_group: "{{ resource_group }}"
      name: webappplan{{ rpfx }}
      is_linux: false
      sku: S1

- name: "Create webapp vnetconnection - check mode"
  azure_rm_webappvnetconnection:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
    vnet_name: vnet{{ rpfx }}
    subnet: subnet{{ rpfx }}
  check_mode: true
  register: output
- name: Assert the resource is well created
  assert:
    that: output.changed

- name: "Check webapp vnetconnection facts 1"
  azure_rm_webappvnetconnection_info:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert the resource has no connections
  assert:
    that:
      - not output.changed
      - output.connection | length == 0

- name: "Create webapp vnetconnection"
  azure_rm_webappvnetconnection:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
    vnet_name: vnet{{ rpfx }}
    subnet: subnet{{ rpfx }}
  register: output
- name: Assert the resource is well created
  assert:
    that:
      - output.changed
      - output.connection.vnet_name == 'vnet{{ rpfx }}'
      - output.connection.subnet_name == 'subnet{{ rpfx }}'
      - output.connection.vnet_resource_group == '{{ resource_group }}'

- name: "Check webapp vnetconnection facts 2"
  azure_rm_webappvnetconnection_info:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert the connection exists
  assert:
    that:
      - not output.changed
      - output.connection.vnet_name == 'vnet{{ rpfx }}'
      - output.connection.subnet_name == 'subnet{{ rpfx }}'
      - output.connection.vnet_resource_group == '{{ resource_group }}'

- name: "Create webapp vnetconnection - idempotent"
  azure_rm_webappvnetconnection:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
    vnet_name: vnet{{ rpfx }}
    subnet: subnet{{ rpfx }}
  register: output
- name: Assert the resource is not changed
  assert:
    that: not output.changed

- name: "Delete webapp vnetconnection"
  azure_rm_webappvnetconnection:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
    state: "absent"
  register: output
- name: Assert the connection is deleted
  assert:
    that:
      - output.changed
      - output.connection | length == 0

- name: "Check webapp vnetconnection facts 3"
  azure_rm_webappvnetconnection_info:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert the resource has no connections
  assert:
    that:
      - not output.changed
      - output.connection | length == 0

- name: "Delete webapp vnetconnection - idempotent"
  azure_rm_webappvnetconnection:
    name: webapp{{ rpfx }}
    resource_group: "{{ resource_group }}"
    state: "absent"
  register: output
- name: Assert the resource is not changed
  assert:
    that: not output.changed
