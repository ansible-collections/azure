- name: Create IP group name
  set_fact:
    group_name: "ipgroup{{ resource_group | hash('md5') | truncate(22, True, '') }}"

- name: Create IP group (check mode)
  azure_rm_ipgroup:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
    location: eastus
    ip_addresses:
      - 13.64.39.16/32
      - 40.74.146.80/31
      - 40.74.147.32/28
    tags:
      key1: "value1"
    state: present
  check_mode: yes

- name: Create IP group
  azure_rm_ipgroup:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
    location: eastus
    ip_addresses:
      - 13.64.39.16/32
      - 40.74.146.80/31
      - 40.74.147.32/28
    tags:
      key1: "value1"
    state: present
  register: results

- name: Assert that IP group is created
  assert:
    that: results.changed

- name: Create same IP group again (Idempotent test)
  azure_rm_ipgroup:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
    location: eastus
    ip_addresses:
      - 13.64.39.16/32
      - 40.74.146.80/31
      - 40.74.147.32/28
    tags:
      key1: "value1"
    state: present
  register: results

- name: Assert that output is not changed
  assert:
    that: not results.changed

- name: Update IP group
  azure_rm_ipgroup:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
    location: eastus
    ip_addresses:
      - 10.0.0.0/24
    tags:
      key2: "value2"
  register: results

- name: Assert that IP group is updated
  assert:
    that: results.changed

- name: Get IP group facts
  azure_rm_ipgroup_info:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
  register: results

- assert:
    that:
      - not results.changed
      - results.ipgroups[0].id != None
      - results.ipgroups[0].name == "{{ group_name }}"
      - results.ipgroups[0].location == "eastus"
      - results.ipgroups[0].provisioning_state == "Succeeded"
      - results.ipgroups[0].ip_addresses == ["10.0.0.0/24"]
      - results.ipgroups[0].tags | length > 0

- name: Delete IP group
  azure_rm_ipgroup:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
    state: absent
  register: results

- name: Assert that IP group is deleted
  assert:
    that: results.changed

- name: Delete IP group again (Idempotent test)
  azure_rm_ipgroup:
    resource_group: "{{ resource_group }}"
    name: "{{ group_name }}"
    state: absent
  register: results

- name: Asset that output is not changed
  assert:
    that: not results.changed
